<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF">

    <ImageBrush x:Key="close_def"
                ImageSource="Assets/shutdown_def.png"
                Stretch="None" />

    <ImageBrush x:Key="close_mo"
                ImageSource="Assets/shutdown_mo.png"
                Stretch="None" />

    <Style x:Key="CloseAppStyle"
           TargetType="{x:Type Button}">

        <Setter Property="MaxHeight"
                Value="55" />
        <Setter Property="MaxWidth"
                Value="55" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Padding"
                Value="10" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_def}">
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_mo}" />
                            <Setter Property="Cursor" TargetName="border" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_mo}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="close_panel_def"
                ImageSource="Assets/close_def.png"
                Stretch="None" />

    <ImageBrush x:Key="close_panel_mo"
                ImageSource="Assets/close_mo.png"
                Stretch="None" />

    <Style x:Key="ClosePanelStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="0,10,10,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_panel_def}">
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_panel_mo}" />

                            <Setter Property="Cursor" TargetName="border" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_panel_mo}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="menu_btn_def"
                ImageSource="Assets/menu_def.png"
                Stretch="None" />

    <ImageBrush x:Key="menu_btn_mo"
                ImageSource="Assets/menu_mo.png"
                Stretch="None" />

    <Style x:Key="MenuBtnStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="55" />
        <Setter Property="Width"
                Value="55" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="15,10,0,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource menu_btn_def}">
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource menu_btn_mo}" />

                            <Setter Property="Cursor" TargetName="border" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource menu_btn_mo}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextOne"
           TargetType="TextBlock">

        <Setter Property="Text"
                Value="Bản quyền bởi VGFX" />
        <Setter Property="Foreground"
                Value="#FFFFFF" />
        <Setter Property="FontSize"
                Value="36" />
        <Setter Property="FontFamily"
                Value="Fonts/#Graduate" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
    </Style>

    <Style x:Key="TextTwo"
           TargetType="TextBlock">

        <Setter Property="Text"
                Value="http://hieuungsankhau.vn - 0869888444" />
        <Setter Property="Foreground"
                Value="#FFFFFF" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Fonts/#Open Sans Medium" />
    </Style>

    <Style x:Key="TextBorder"
           TargetType="Border">

        <Setter Property="Background"
                Value="#C02442" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Width"
                Value="auto" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="CornerRadius"
                Value="3" />
    </Style>

    <Style x:Key="NameBase"
           TargetType="Grid">

        <Setter Property="Height"
                Value="70" />
        <Setter Property="Width"
                Value="auto" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="Margin"
                Value="10,10,10,10" />
    </Style>

    <Style x:Key="PanelStyle"
           TargetType="Border">

        <Setter Property="Width"
                Value="220" />
        <Setter Property="Background"
                Value="#C02442" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="CornerRadius"
                Value="20,0,0,20" />
    </Style>

    <Style x:Key="BackgroundStyle"
           TargetType="Border">

        <Setter Property="Background"
                Value="#2A2C2D" />
        <Setter Property="CornerRadius"
                Value="20" />
    </Style>

    <Style x:Key="LedPath" TargetType="Path">
        <Setter Property="Data" Value="M 10,50 H 200" />
        <Setter Property="Height" Value="100" />
        <Setter Property="StrokeDashOffset" Value="0" />
        <Setter Property="StrokeThickness" Value="5" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="StrokeStartLineCap" Value="Triangle" />
        <Setter Property="StrokeEndLineCap" Value="Triangle" />
        <Setter Property="StrokeDashArray" Value="500" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stroke">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop  Color="Red" Offset="0.0" />
                    <GradientStop  Color="Beige" Offset="0.5" />
                    <GradientStop  Color="Red" Offset="1.1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Path.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                             Storyboard.TargetProperty="StrokeDashOffset"
                                             From="500" To="0"
                                             Duration="0:0:1"
                                             BeginTime="0:0:0" />
                        <DoubleAnimation
                                             Storyboard.TargetProperty="Stroke.GradientStops[1].Offset"
                                             From="0.0" To="1.1"
                                             AutoReverse="True"
                                             BeginTime="0:0:0"
                                             Duration="0:0:1"
                                             RepeatBehavior="Forever" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <DataTrigger Binding="{Binding DataContext.IsConnected, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                <Setter Property="Stroke">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop  Color="Green" Offset="0.0" />
                            <GradientStop  Color="Beige" Offset="0.5" />
                            <GradientStop  Color="Green" Offset="1.1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StandardBtn" TargetType="Button">
        <Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="#6E6D70">
                        <Grid>
                            <TextBlock x:Name="textContent"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Padding="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       FontWeight="Bold"
                                       FontFamily="Fonts/#Graduate" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Green" TargetName="textContent" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuBtn" TargetType="Button">
        <Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Grid>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       Padding="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       FontWeight="Bold"
                                       FontFamily="Fonts/#Graduate" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MediaBtn" TargetType="Button">
        <Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <fa:ImageAwesome Icon="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MediaRadioBtnPlay" TargetType="CheckBox">
        <Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Padding="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <fa:ImageAwesome x:Name="icon" Icon="Play"
                                         Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="icon" Property="Icon" Value="pause"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="icon" Property="Icon" Value="play"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border" BorderBrush="#6E6D70"
              CornerRadius="5" BorderThickness="1, 1, 1, 1"
              Background="#6E6D70" />
            <Border Grid.Column="1" Name="ButtonBorder" Padding="5 0 5 0">
                <fa:ImageAwesome Name="Arrow" Icon="ChevronDown" Foreground="White"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" TargetName="Arrow" Value="#FF8D979E" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                <Setter Property="Foreground" TargetName="Arrow" Value="#999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="Black" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          TextBlock.FontFamily="Fonts/#Graduate"
                                          TextBlock.FontWeight="Bold"
                                          TextBlock.Foreground="White"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" Background="Transparent"
                                 HorizontalAlignment="Center" VerticalAlignment="Center"
                                 FontFamily="Fonts/#Graduate"
                                 Focusable="True">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                               Focusable="False" AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                        CornerRadius="0" BorderThickness="1,1,1,1"
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" />
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ItemComboBoxFlat" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <TextBlock x:Name="txtContent" FontFamily="Fonts/#Graduate" 
                               Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                               Foreground="#6E6D70"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               Margin="5"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtContent" Property="Foreground" Value="Black"/>
                            <Setter TargetName="txtContent" Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardTextbox" TargetType="TextBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="StandardTextBlock" TargetType="TextBlock">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Fonts/#Graduate"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
</ResourceDictionary>